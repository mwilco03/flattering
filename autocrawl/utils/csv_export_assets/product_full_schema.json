{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Product",
  "type": "object",
  "allOf": [
    {
      "properties": {
        "aggregateRating": {
          "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
          "example": {
            "ratingValue": 4.0,
            "bestRating": 5.0,
            "reviewCount": 24
          },
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "ratingValue": {
              "description": "The rating for the content",
              "type": "number"
            },
            "bestRating": {
              "description": "The highest value allowed in this rating system",
              "type": "number"
            },
            "reviewCount": {
              "description": "The total number of reviews",
              "type": "integer"
            }
          },
          "anyOf": [
            {
              "required": [
                "ratingValue"
              ]
            },
            {
              "required": [
                "bestRating"
              ]
            },
            {
              "required": [
                "reviewCount"
              ]
            }
          ]
        },
        "ratingHistogram": {
          "description": "Distribution of ratings across the entire rating scale\n\n![](https://dl.dropboxusercontent.com/s/tqgvuujk362ztse/histogram.png)\n",
          "example": [
            {
              "ratingValue": "5",
              "ratingPercentage": 61
            },
            {
              "ratingValue": "4",
              "ratingPercentage": 12
            },
            {
              "ratingValue": "3",
              "ratingPercentage": 6
            },
            {
              "ratingValue": "2",
              "ratingPercentage": 5
            },
            {
              "ratingValue": "1",
              "ratingPercentage": 16
            }
          ],
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "description": "The number or percentage of reviews/ratings",
            "properties": {
              "ratingOption": {
                "description": "A quantitative or qualitative value depicting the rating",
                "examples": [
                  "4",
                  "5 stars",
                  "Good",
                  "Dissatisfied (4)"
                ],
                "type": "string"
              },
              "ratingCount": {
                "description": "The number of reviews/ratings for a certain rating value",
                "examples": [
                  4500
                ],
                "type": "number"
              },
              "ratingPercentage": {
                "description": "The percentage of reviews/ratings for a certain rating value",
                "examples": [
                  50
                ],
                "type": "number"
              }
            }
          }
        },
        "brand": {
          "description": "The brand associated with the product\n\n![](https://dl.dropboxusercontent.com/s/esun7ckldock2b2/brand.png)\n\n`\"Samsung\"`\n\n![](https://dl.dropboxusercontent.com/s/q4l3qesmsqzvd8s/brand_not.png)\n\n**No brand is returned**\n",
          "example": "Samsung",
          "type": "string"
        },
        "breadcrumbs": {
          "description": "A list of breadcrumbs with optional name and URL.",
          "example": [
            {
              "name": "Cell Phones & Accessories",
              "link": "https://mjz.com/cell-phones-accessories"
            }
          ],
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "link": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "URL",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]{0,1}\\:.*",
                "additionalProperties": false
              }
            },
            "anyOf": [
              {
                "required": [
                  "name"
                ]
              },
              {
                "required": [
                  "link"
                ]
              }
            ]
          },
          "type": "array"
        },
        "description": {
          "description": "A description of the product",
          "type": "string"
        },
        "images": {
          "description": "A list of URL or data URL values of all images of the product (may include the main image).",
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "URL",
            "type": "string",
            "format": "uri",
            "pattern": "^http[s]{0,1}\\:.*",
            "additionalProperties": false
          },
          "type": "array"
        },
        "questions": {
          "description": "A list of questions with answers related to the product.",
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Question",
            "type": "object",
            "properties": {
              "text": {
                "description": "The text of the question for the product/item.",
                "example": "Do you like it?",
                "type": "string"
              },
              "questionDate": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "Date when the question was asked.",
                "example": "2019-06-21T00:00:00"
              },
              "questionDateRaw": {
                "description": "Date when the question was asked - raw data",
                "type": "string",
                "example": "21 June 2019"
              },
              "author": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "description": "Name of the author",
                    "type": "string"
                  }
                }
              },
              "url": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "URL",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]{0,1}\\:.*",
                "additionalProperties": false,
                "description": "The URL of the question",
                "example": "https://www.example.com/questions/some_id"
              },
              "vote": {
                "description": "The number of votes for the question",
                "example": 5,
                "type": "integer"
              },
              "numberOfAnswers": {
                "description": "The number of answers for the question",
                "example": 8,
                "type": "integer"
              },
              "answers": {
                "type": "array",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "Answer",
                  "type": "object",
                  "properties": {
                    "text": {
                      "description": "The answer of a question.",
                      "example": "Do you like it?",
                      "type": "string"
                    },
                    "answerDate": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "String format is date or datetime",
                      "type": "string",
                      "anyOf": [
                        {
                          "format": "date-time"
                        },
                        {
                          "format": "date"
                        },
                        {
                          "pattern": "^\\d{4}$"
                        },
                        {
                          "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                        },
                        {
                          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                        }
                      ],
                      "description": "Date when the answer was posted.",
                      "example": "2019-06-21T00:00:00"
                    },
                    "answerDateRaw": {
                      "description": "Date when the answer was posted - raw data",
                      "type": "string",
                      "example": "21 June 2019"
                    },
                    "author": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "Name of the author",
                          "type": "string"
                        }
                      }
                    },
                    "interaction_counter": {
                      "description": "A summary of how users have interacted",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Interaction Counter",
                        "type": "object",
                        "properties": {
                          "interactionType": {
                            "description": "The Action representing the type of interaction.",
                            "type": "string",
                            "example": [
                              "upvote",
                              "downvote",
                              "like",
                              "funny",
                              "download",
                              "comment"
                            ]
                          },
                          "userInteractionCount": {
                            "description": "The number of interactions.",
                            "example": 12,
                            "type": "integer"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                }
              },
              "interaction_counter": {
                "description": "A summary of how users have interacted",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "Interaction Counter",
                  "type": "object",
                  "properties": {
                    "interactionType": {
                      "description": "The Action representing the type of interaction.",
                      "type": "string",
                      "example": [
                        "upvote",
                        "downvote",
                        "like",
                        "funny",
                        "download",
                        "comment"
                      ]
                    },
                    "userInteractionCount": {
                      "description": "The number of interactions.",
                      "example": 12,
                      "type": "integer"
                    }
                  }
                },
                "type": "array"
              }
            }
          },
          "type": "array"
        },
        "madeIn": {
          "description": "The city or country where the product has been manufactured. The website should explicitly carry wording to disambiguate this from product location",
          "examples": [
            "Vietnam",
            "New York"
          ],
          "type": "string"
        },
        "mainImage": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "URL",
          "type": "string",
          "format": "uri",
          "pattern": "^http[s]{0,1}\\:.*",
          "additionalProperties": false,
          "description": "A URL or data URL value of the main image of the product."
        },
        "name": {
          "description": "The name of the product",
          "type": "string"
        },
        "offers": {
          "description": "This field contains rich information pertaining to all the buying options offered on a product.\n\n![](https://dl.dropboxusercontent.com/s/s165a738ez4vsdq/offers2.png)\n",
          "example": [
            {
              "availability": "InStock",
              "currency": "$",
              "itemCondition": {
                "description": "Used - Very Good",
                "type": "used"
              },
              "price": "129.99",
              "seller": {
                "aggregateRating": {
                  "bestRating": 5,
                  "reviewCount": 479
                },
                "identifier": "A8K32FFKI51FKN",
                "name": "Merch Store",
                "shippingInfo": {
                  "description": "Arrives between September 3-18.",
                  "maxDays": "30",
                  "minDays": "15"
                },
                "url": "https://mzi.com/dr/amg/seller=A8K32FFKI51FKN"
              }
            }
          ],
          "items": {
            "description": "The offers field contains several fields as explained below that can be leveraged to get deep insights\ninto the various product offerings, associated seller information as well as inventory.\n",
            "title": "Offer",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "inventoryLevel": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Amount of item's stock available for buying on the website",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "availability": {
                "description": "Availibility status for the offer",
                "examples": [
                  "InStock"
                ],
                "type": "string",
                "enum": [
                  "Discontinued",
                  "InStock",
                  "InStoreOnly",
                  "LimitedAvailability",
                  "OnlineOnly",
                  "OutOfStock",
                  "PreOrder",
                  "PreSale",
                  "SoldOut"
                ]
              },
              "currency": {
                "type": "string"
              },
              "regularPrice": {
                "description": "The price at which the product was being offered and which is presented as a reference to the current price. It may be represented by original price, list price or maximum retail price for which the product is sold. This field is only returned if it is explicitly mentioned in the offer or the product page\n",
                "type": "string",
                "pattern": "^[0-9]+(\\.[0-9]+)?$"
              },
              "price": {
                "description": "The price at which the product is being offered. If there is only one price associated with the offer, it is this field in which it is returned\n",
                "type": "string",
                "pattern": "^[0-9]+(\\.[0-9]+)?$"
              },
              "eligibleQuantity": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "A required quantity that needs to be bought in order to be able to get this offer",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "seller": {
                "title": "Seller",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "URL",
                    "type": "string",
                    "format": "uri",
                    "pattern": "^http[s]{0,1}\\:.*",
                    "additionalProperties": false
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "aggregateRating": {
                    "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
                    "example": {
                      "ratingValue": 4.0,
                      "bestRating": 5.0,
                      "reviewCount": 24
                    },
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "ratingValue": {
                        "description": "The rating for the content",
                        "type": "number"
                      },
                      "bestRating": {
                        "description": "The highest value allowed in this rating system",
                        "type": "number"
                      },
                      "reviewCount": {
                        "description": "The total number of reviews",
                        "type": "integer"
                      }
                    },
                    "anyOf": [
                      {
                        "required": [
                          "ratingValue"
                        ]
                      },
                      {
                        "required": [
                          "bestRating"
                        ]
                      },
                      {
                        "required": [
                          "reviewCount"
                        ]
                      }
                    ]
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "url"
                    ]
                  },
                  {
                    "required": [
                      "identifier"
                    ]
                  }
                ]
              },
              "shippingInfo": {
                "description": "Shipping info",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "currency": {
                    "description": "Currency associated to the price",
                    "type": "string"
                  },
                  "price": {
                    "description": "Cost of the shipping",
                    "type": "string",
                    "pattern": "^[0-9]+(\\.[0-9]+)?$"
                  },
                  "hasDeliveryMethod": {
                    "description": "Method used for delivery or shipping",
                    "type": "string",
                    "enum": [
                      "LockerDelivery",
                      "OnSitePickup",
                      "ParcelService",
                      "OnStorePickup"
                    ]
                  },
                  "minDays": {
                    "description": "Minimum number of days estimated for the delivery",
                    "type": "number"
                  },
                  "maxDays": {
                    "description": "Maximum number of days estimated for the delivery",
                    "type": "number"
                  },
                  "averageDays": {
                    "description": "Average days for a delivery",
                    "type": "number"
                  },
                  "description": {
                    "description": "Any associated text describing the shipping info",
                    "type": "string"
                  },
                  "originAddress": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "Postal Address",
                    "type": "object",
                    "properties": {
                      "postalCode": {
                        "description": "Postal code of the address",
                        "example": "94043",
                        "type": "string"
                      },
                      "streetAddress": {
                        "description": "The street address",
                        "example": "1600 Amphitheatre Pkwy",
                        "type": "string"
                      },
                      "addressCountry": {
                        "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                        "example": [
                          "United States of America",
                          "US"
                        ],
                        "type": "string"
                      },
                      "addressLocality": {
                        "description": "The locality in which the street address is, and which is in the region.",
                        "example": "Mountain View",
                        "type": "string"
                      },
                      "addressRegion": {
                        "description": "The region in which the locality is, and which is in the country",
                        "example": "California",
                        "type": "string"
                      },
                      "raw": {
                        "description": "All the address info as it appears on the website",
                        "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                        "type": "string"
                      }
                    },
                    "description": "Location of the warehouse where the item is shipped from"
                  },
                  "raw": {
                    "description": "Shipping information of the product included in the offer  as it appears on the website"
                  }
                },
                "dependencies": {
                  "currency": {
                    "required": [
                      "price"
                    ]
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "price"
                    ]
                  },
                  {
                    "required": [
                      "description"
                    ]
                  }
                ]
              },
              "availableAtOrFrom": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Postal Address",
                "type": "object",
                "properties": {
                  "postalCode": {
                    "description": "Postal code of the address",
                    "example": "94043",
                    "type": "string"
                  },
                  "streetAddress": {
                    "description": "The street address",
                    "example": "1600 Amphitheatre Pkwy",
                    "type": "string"
                  },
                  "addressCountry": {
                    "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                    "example": [
                      "United States of America",
                      "US"
                    ],
                    "type": "string"
                  },
                  "addressLocality": {
                    "description": "The locality in which the street address is, and which is in the region.",
                    "example": "Mountain View",
                    "type": "string"
                  },
                  "addressRegion": {
                    "description": "The region in which the locality is, and which is in the country",
                    "example": "California",
                    "type": "string"
                  },
                  "raw": {
                    "description": "All the address info as it appears on the website",
                    "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                    "type": "string"
                  }
                },
                "description": "The place(s) from which the offer can be obtained (e.g. store locations). It could contain a string, i.e.: online_only"
              },
              "areaServed": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Postal Address",
                "type": "object",
                "properties": {
                  "postalCode": {
                    "description": "Postal code of the address",
                    "example": "94043",
                    "type": "string"
                  },
                  "streetAddress": {
                    "description": "The street address",
                    "example": "1600 Amphitheatre Pkwy",
                    "type": "string"
                  },
                  "addressCountry": {
                    "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                    "example": [
                      "United States of America",
                      "US"
                    ],
                    "type": "string"
                  },
                  "addressLocality": {
                    "description": "The locality in which the street address is, and which is in the region.",
                    "example": "Mountain View",
                    "type": "string"
                  },
                  "addressRegion": {
                    "description": "The region in which the locality is, and which is in the country",
                    "example": "California",
                    "type": "string"
                  },
                  "raw": {
                    "description": "All the address info as it appears on the website",
                    "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                    "type": "string"
                  }
                },
                "description": "The geographic area where the product can be delivered"
              },
              "itemCondition": {
                "description": "A predefined value and a textual description of the condition of the product included in the offer",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "A predefined value of the condition of the product included in the offer",
                    "type": "string",
                    "enum": [
                      "NewCondition",
                      "DamagedCondition",
                      "RefurbishedCondition",
                      "UsedCondition"
                    ]
                  },
                  "raw": {
                    "description": "Condition of the product included in the offer  as it appears on the website",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "type"
                    ]
                  },
                  {
                    "required": [
                      "description"
                    ]
                  }
                ]
              },
              "pricePerUnit": {
                "title": "Price per unit",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "price": {
                    "type": "string",
                    "pattern": "^[0-9]+(\\.[0-9]+)?$"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "unit": {
                    "type": "string"
                  }
                },
                "required": [
                  "unit"
                ],
                "dependencies": {
                  "currency": [
                    "price"
                  ]
                }
              },
              "eligibleCustomerType": {
                "description": "The type of customer for which the given offer is valid",
                "type": "string",
                "enum": [
                  "Member",
                  "Public"
                ]
              },
              "ownership": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Owned",
                      "Rented",
                      "Leased",
                      "Licensed"
                    ]
                  },
                  "duration": {
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "additionalProperty": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
                "example": [
                  {
                    "name": "batteries",
                    "value": "1 Lithium ion batteries required. (included)"
                  },
                  {
                    "name": "Item model number",
                    "value": "SM-A105G/DS"
                  }
                ],
                "type": "array",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "A generic name:value field",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": [
                        "number",
                        "string",
                        "boolean",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            },
            "dependencies": {
              "currency": {
                "anyOf": [
                  {
                    "required": [
                      "price"
                    ]
                  },
                  {
                    "required": [
                      "regularPrice"
                    ]
                  }
                ]
              }
            }
          },
          "type": "array"
        },
        "additionalProperty": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
          "example": [
            {
              "name": "batteries",
              "value": "1 Lithium ion batteries required. (included)"
            },
            {
              "name": "Item model number",
              "value": "SM-A105G/DS"
            }
          ],
          "type": "array",
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "A generic name:value field",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string"
              },
              "value": {
                "type": [
                  "number",
                  "string",
                  "boolean",
                  "object",
                  "array"
                ]
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "sku": {
          "description": "The Stock Keeping Unit (SKU) i.e. a merchant-specific identifier for the product\n\n![](https://dl.dropboxusercontent.com/s/3ymj186jxdaax8e/sku.png)\n",
          "example": "A123DK9823",
          "type": "string"
        },
        "mpn": {
          "description": "The Manufacturer Part Number (MPN) of the product. The product would have the same MPN across different e-commerce websites.",
          "type": "string"
        },
        "gtin": {
          "description": "Standardized GTIN product identifier which is unique for a product across different sellers.",
          "example": [
            {
              "type": "isbn13",
              "value": "9781933624341"
            }
          ],
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "`gtin14` corresponds to former names *EAN/UCC-14*, *SCC-14*, *DUN-14*, *UPC Case Code*, *UPC Shipping Container Code*.\n\n`ean13` also includes the *jan* (japanese article number)\n",
                "enum": [
                  "ean13",
                  "gtin8",
                  "gtin14",
                  "isbn10",
                  "isbn13",
                  "ismn",
                  "issn",
                  "upc"
                ],
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "type",
              "value"
            ]
          }
        },
        "manufacturer": {
          "description": "The manufacturer company of the product. The difference between brand and manufacturer is difficult to stablish, so this field should only be included when the description appear explicitly on the website, otherwise, brand field is prefered over manufacturer",
          "type": "string"
        },
        "productionDate": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "String format is date or datetime",
          "type": "string",
          "anyOf": [
            {
              "format": "date-time"
            },
            {
              "format": "date"
            },
            {
              "pattern": "^\\d{4}$"
            },
            {
              "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
            },
            {
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
            }
          ],
          "description": "The date of production of the item"
        },
        "productionDateRaw": {
          "description": "The date of production of the item as it appears on the website",
          "type": "string"
        },
        "size": {
          "description": "Denotes the size of the product. Pertinent to products such as garments, shoes, accessories etc",
          "examples": [
            "XL",
            "EU 6",
            "12"
          ],
          "type": "string"
        },
        "height": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "A generic quantitative value",
          "description": "The height of the product",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "maxValue": {
              "description": "Maximum value allowed",
              "type": "number"
            },
            "minValue": {
              "description": "Minimum value required",
              "type": "number"
            },
            "value": {
              "description": "Exact value required",
              "type": "number"
            },
            "unitText": {
              "description": "Unit of measurement",
              "type": "string"
            },
            "description": {
              "description": "Free text from where this range was extracted",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "maxValue"
              ]
            },
            {
              "required": [
                "minValue"
              ]
            },
            {
              "required": [
                "value"
              ]
            }
          ]
        },
        "width": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "A generic quantitative value",
          "description": "The width of the product",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "maxValue": {
              "description": "Maximum value allowed",
              "type": "number"
            },
            "minValue": {
              "description": "Minimum value required",
              "type": "number"
            },
            "value": {
              "description": "Exact value required",
              "type": "number"
            },
            "unitText": {
              "description": "Unit of measurement",
              "type": "string"
            },
            "description": {
              "description": "Free text from where this range was extracted",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "maxValue"
              ]
            },
            {
              "required": [
                "minValue"
              ]
            },
            {
              "required": [
                "value"
              ]
            }
          ]
        },
        "depth": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "A generic quantitative value",
          "description": "The depth of the product",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "maxValue": {
              "description": "Maximum value allowed",
              "type": "number"
            },
            "minValue": {
              "description": "Minimum value required",
              "type": "number"
            },
            "value": {
              "description": "Exact value required",
              "type": "number"
            },
            "unitText": {
              "description": "Unit of measurement",
              "type": "string"
            },
            "description": {
              "description": "Free text from where this range was extracted",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "maxValue"
              ]
            },
            {
              "required": [
                "minValue"
              ]
            },
            {
              "required": [
                "value"
              ]
            }
          ]
        },
        "weight": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "A generic quantitative value",
          "description": "The weight of the product",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "maxValue": {
              "description": "Maximum value allowed",
              "type": "number"
            },
            "minValue": {
              "description": "Minimum value required",
              "type": "number"
            },
            "value": {
              "description": "Exact value required",
              "type": "number"
            },
            "unitText": {
              "description": "Unit of measurement",
              "type": "string"
            },
            "description": {
              "description": "Free text from where this range was extracted",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "maxValue"
              ]
            },
            {
              "required": [
                "minValue"
              ]
            },
            {
              "required": [
                "value"
              ]
            }
          ]
        },
        "volume": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "A generic quantitative value",
          "description": "The volume of the product",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "maxValue": {
              "description": "Maximum value allowed",
              "type": "number"
            },
            "minValue": {
              "description": "Minimum value required",
              "type": "number"
            },
            "value": {
              "description": "Exact value required",
              "type": "number"
            },
            "unitText": {
              "description": "Unit of measurement",
              "type": "string"
            },
            "description": {
              "description": "Free text from where this range was extracted",
              "type": "string"
            }
          },
          "anyOf": [
            {
              "required": [
                "maxValue"
              ]
            },
            {
              "required": [
                "minValue"
              ]
            },
            {
              "required": [
                "value"
              ]
            }
          ]
        },
        "url": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "URL",
          "type": "string",
          "format": "uri",
          "pattern": "^http[s]{0,1}\\:.*",
          "additionalProperties": false,
          "description": "The URL of the product"
        },
        "releaseDate": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "String format is date or datetime",
          "type": "string",
          "anyOf": [
            {
              "format": "date-time"
            },
            {
              "format": "date"
            },
            {
              "pattern": "^\\d{4}$"
            },
            {
              "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
            },
            {
              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
            }
          ],
          "description": "Date on which the product was released or listed on the website in ISO 8601 date format",
          "example": "2016-12-18"
        },
        "releaseDateRaw": {
          "description": "Date on which the product was released or listed on the website",
          "example": "December 18, 2016",
          "type": "string"
        },
        "color": {
          "description": "The color of the product",
          "type": "string"
        },
        "rankings": {
          "title": "Ranking",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "category": {
                "type": "string"
              },
              "rank": {
                "type": "integer"
              }
            },
            "required": [
              "category",
              "rank"
            ]
          },
          "description": "Position of the product across different ranks"
        },
        "nutrition": {
          "description": "Nutritional information about the product",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Nutritional information about the recipe",
            "properties": {
              "description": {
                "description": "Additional text for describing the nutritional table, i.e. per 100g",
                "type": "string"
              },
              "calories": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Number of calories",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "carbohydrateContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Carbohydrate content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "cholesterolContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Cholesterol content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "fatContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Fat content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "fiberContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Fiber content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "proteinContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Protein content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "saturatedFatContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Saturated fat content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "sodiumContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Sodium",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "sugarContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Sugar content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "transFatContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Trans fat content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "unsaturatedFatContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "Unsaturated fat content",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "waterContent": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The amount of water",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "vitaminsContent": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "content": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "A value or interval for product characteristics and other purposes",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "mineralsContent": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "content": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "A value or interval for product characteristics and other purposes",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "properties": {
        "relatedProducts": {
          "description": "This field captures all products that are recommended by the website while browsing the product of interest.\nRelated products can thus be used to gauge customer buying behaviour, sponsored products as well best sellers in the same category.\nThe `relationshipName` field describes the relationship while the `products` field contains a list of items have the same Product schema,\nthus extracting all available fields as defined in this table.\n\n![](https://dl.dropboxusercontent.com/s/phzqh33r6pyjel0/related_products.png)\n",
          "type": "array",
          "items": {
            "description": "Related/Similar products suggested by the websites",
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "relationshipName": {
                "type": "string"
              },
              "products": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "aggregateRating": {
                          "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
                          "example": {
                            "ratingValue": 4.0,
                            "bestRating": 5.0,
                            "reviewCount": 24
                          },
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "ratingValue": {
                              "description": "The rating for the content",
                              "type": "number"
                            },
                            "bestRating": {
                              "description": "The highest value allowed in this rating system",
                              "type": "number"
                            },
                            "reviewCount": {
                              "description": "The total number of reviews",
                              "type": "integer"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "ratingValue"
                              ]
                            },
                            {
                              "required": [
                                "bestRating"
                              ]
                            },
                            {
                              "required": [
                                "reviewCount"
                              ]
                            }
                          ]
                        },
                        "ratingHistogram": {
                          "description": "Distribution of ratings across the entire rating scale\n\n![](https://dl.dropboxusercontent.com/s/tqgvuujk362ztse/histogram.png)\n",
                          "example": [
                            {
                              "ratingValue": "5",
                              "ratingPercentage": 61
                            },
                            {
                              "ratingValue": "4",
                              "ratingPercentage": 12
                            },
                            {
                              "ratingValue": "3",
                              "ratingPercentage": 6
                            },
                            {
                              "ratingValue": "2",
                              "ratingPercentage": 5
                            },
                            {
                              "ratingValue": "1",
                              "ratingPercentage": 16
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "The number or percentage of reviews/ratings",
                            "properties": {
                              "ratingOption": {
                                "description": "A quantitative or qualitative value depicting the rating",
                                "examples": [
                                  "4",
                                  "5 stars",
                                  "Good",
                                  "Dissatisfied (4)"
                                ],
                                "type": "string"
                              },
                              "ratingCount": {
                                "description": "The number of reviews/ratings for a certain rating value",
                                "examples": [
                                  4500
                                ],
                                "type": "number"
                              },
                              "ratingPercentage": {
                                "description": "The percentage of reviews/ratings for a certain rating value",
                                "examples": [
                                  50
                                ],
                                "type": "number"
                              }
                            }
                          }
                        },
                        "brand": {
                          "description": "The brand associated with the product\n\n![](https://dl.dropboxusercontent.com/s/esun7ckldock2b2/brand.png)\n\n`\"Samsung\"`\n\n![](https://dl.dropboxusercontent.com/s/q4l3qesmsqzvd8s/brand_not.png)\n\n**No brand is returned**\n",
                          "example": "Samsung",
                          "type": "string"
                        },
                        "breadcrumbs": {
                          "description": "A list of breadcrumbs with optional name and URL.",
                          "example": [
                            {
                              "name": "Cell Phones & Accessories",
                              "link": "https://mjz.com/cell-phones-accessories"
                            }
                          ],
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "link": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "URL",
                                "type": "string",
                                "format": "uri",
                                "pattern": "^http[s]{0,1}\\:.*",
                                "additionalProperties": false
                              }
                            },
                            "anyOf": [
                              {
                                "required": [
                                  "name"
                                ]
                              },
                              {
                                "required": [
                                  "link"
                                ]
                              }
                            ]
                          },
                          "type": "array"
                        },
                        "description": {
                          "description": "A description of the product",
                          "type": "string"
                        },
                        "images": {
                          "description": "A list of URL or data URL values of all images of the product (may include the main image).",
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "URL",
                            "type": "string",
                            "format": "uri",
                            "pattern": "^http[s]{0,1}\\:.*",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "questions": {
                          "description": "A list of questions with answers related to the product.",
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "Question",
                            "type": "object",
                            "properties": {
                              "text": {
                                "description": "The text of the question for the product/item.",
                                "example": "Do you like it?",
                                "type": "string"
                              },
                              "questionDate": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "String format is date or datetime",
                                "type": "string",
                                "anyOf": [
                                  {
                                    "format": "date-time"
                                  },
                                  {
                                    "format": "date"
                                  },
                                  {
                                    "pattern": "^\\d{4}$"
                                  },
                                  {
                                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                                  },
                                  {
                                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                                  }
                                ],
                                "description": "Date when the question was asked.",
                                "example": "2019-06-21T00:00:00"
                              },
                              "questionDateRaw": {
                                "description": "Date when the question was asked - raw data",
                                "type": "string",
                                "example": "21 June 2019"
                              },
                              "author": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "description": "Name of the author",
                                    "type": "string"
                                  }
                                }
                              },
                              "url": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "URL",
                                "type": "string",
                                "format": "uri",
                                "pattern": "^http[s]{0,1}\\:.*",
                                "additionalProperties": false,
                                "description": "The URL of the question",
                                "example": "https://www.example.com/questions/some_id"
                              },
                              "vote": {
                                "description": "The number of votes for the question",
                                "example": 5,
                                "type": "integer"
                              },
                              "numberOfAnswers": {
                                "description": "The number of answers for the question",
                                "example": 8,
                                "type": "integer"
                              },
                              "answers": {
                                "type": "array",
                                "items": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "Answer",
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "description": "The answer of a question.",
                                      "example": "Do you like it?",
                                      "type": "string"
                                    },
                                    "answerDate": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "String format is date or datetime",
                                      "type": "string",
                                      "anyOf": [
                                        {
                                          "format": "date-time"
                                        },
                                        {
                                          "format": "date"
                                        },
                                        {
                                          "pattern": "^\\d{4}$"
                                        },
                                        {
                                          "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                                        },
                                        {
                                          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                                        }
                                      ],
                                      "description": "Date when the answer was posted.",
                                      "example": "2019-06-21T00:00:00"
                                    },
                                    "answerDateRaw": {
                                      "description": "Date when the answer was posted - raw data",
                                      "type": "string",
                                      "example": "21 June 2019"
                                    },
                                    "author": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "name": {
                                          "description": "Name of the author",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "interaction_counter": {
                                      "description": "A summary of how users have interacted",
                                      "items": {
                                        "$schema": "http://json-schema.org/draft-07/schema#",
                                        "title": "Interaction Counter",
                                        "type": "object",
                                        "properties": {
                                          "interactionType": {
                                            "description": "The Action representing the type of interaction.",
                                            "type": "string",
                                            "example": [
                                              "upvote",
                                              "downvote",
                                              "like",
                                              "funny",
                                              "download",
                                              "comment"
                                            ]
                                          },
                                          "userInteractionCount": {
                                            "description": "The number of interactions.",
                                            "example": 12,
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "type": "array"
                                    }
                                  }
                                }
                              },
                              "interaction_counter": {
                                "description": "A summary of how users have interacted",
                                "items": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "Interaction Counter",
                                  "type": "object",
                                  "properties": {
                                    "interactionType": {
                                      "description": "The Action representing the type of interaction.",
                                      "type": "string",
                                      "example": [
                                        "upvote",
                                        "downvote",
                                        "like",
                                        "funny",
                                        "download",
                                        "comment"
                                      ]
                                    },
                                    "userInteractionCount": {
                                      "description": "The number of interactions.",
                                      "example": 12,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "type": "array"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "madeIn": {
                          "description": "The city or country where the product has been manufactured. The website should explicitly carry wording to disambiguate this from product location",
                          "examples": [
                            "Vietnam",
                            "New York"
                          ],
                          "type": "string"
                        },
                        "mainImage": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "URL",
                          "type": "string",
                          "format": "uri",
                          "pattern": "^http[s]{0,1}\\:.*",
                          "additionalProperties": false,
                          "description": "A URL or data URL value of the main image of the product."
                        },
                        "name": {
                          "description": "The name of the product",
                          "type": "string"
                        },
                        "offers": {
                          "description": "This field contains rich information pertaining to all the buying options offered on a product.\n\n![](https://dl.dropboxusercontent.com/s/s165a738ez4vsdq/offers2.png)\n",
                          "example": [
                            {
                              "availability": "InStock",
                              "currency": "$",
                              "itemCondition": {
                                "description": "Used - Very Good",
                                "type": "used"
                              },
                              "price": "129.99",
                              "seller": {
                                "aggregateRating": {
                                  "bestRating": 5,
                                  "reviewCount": 479
                                },
                                "identifier": "A8K32FFKI51FKN",
                                "name": "Merch Store",
                                "shippingInfo": {
                                  "description": "Arrives between September 3-18.",
                                  "maxDays": "30",
                                  "minDays": "15"
                                },
                                "url": "https://mzi.com/dr/amg/seller=A8K32FFKI51FKN"
                              }
                            }
                          ],
                          "items": {
                            "description": "The offers field contains several fields as explained below that can be leveraged to get deep insights\ninto the various product offerings, associated seller information as well as inventory.\n",
                            "title": "Offer",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "inventoryLevel": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Amount of item's stock available for buying on the website",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "availability": {
                                "description": "Availibility status for the offer",
                                "examples": [
                                  "InStock"
                                ],
                                "type": "string",
                                "enum": [
                                  "Discontinued",
                                  "InStock",
                                  "InStoreOnly",
                                  "LimitedAvailability",
                                  "OnlineOnly",
                                  "OutOfStock",
                                  "PreOrder",
                                  "PreSale",
                                  "SoldOut"
                                ]
                              },
                              "currency": {
                                "type": "string"
                              },
                              "regularPrice": {
                                "description": "The price at which the product was being offered and which is presented as a reference to the current price. It may be represented by original price, list price or maximum retail price for which the product is sold. This field is only returned if it is explicitly mentioned in the offer or the product page\n",
                                "type": "string",
                                "pattern": "^[0-9]+(\\.[0-9]+)?$"
                              },
                              "price": {
                                "description": "The price at which the product is being offered. If there is only one price associated with the offer, it is this field in which it is returned\n",
                                "type": "string",
                                "pattern": "^[0-9]+(\\.[0-9]+)?$"
                              },
                              "eligibleQuantity": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "A required quantity that needs to be bought in order to be able to get this offer",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "seller": {
                                "title": "Seller",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "URL",
                                    "type": "string",
                                    "format": "uri",
                                    "pattern": "^http[s]{0,1}\\:.*",
                                    "additionalProperties": false
                                  },
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "aggregateRating": {
                                    "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
                                    "example": {
                                      "ratingValue": 4.0,
                                      "bestRating": 5.0,
                                      "reviewCount": 24
                                    },
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "ratingValue": {
                                        "description": "The rating for the content",
                                        "type": "number"
                                      },
                                      "bestRating": {
                                        "description": "The highest value allowed in this rating system",
                                        "type": "number"
                                      },
                                      "reviewCount": {
                                        "description": "The total number of reviews",
                                        "type": "integer"
                                      }
                                    },
                                    "anyOf": [
                                      {
                                        "required": [
                                          "ratingValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "bestRating"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "reviewCount"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "url"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "identifier"
                                    ]
                                  }
                                ]
                              },
                              "shippingInfo": {
                                "description": "Shipping info",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "currency": {
                                    "description": "Currency associated to the price",
                                    "type": "string"
                                  },
                                  "price": {
                                    "description": "Cost of the shipping",
                                    "type": "string",
                                    "pattern": "^[0-9]+(\\.[0-9]+)?$"
                                  },
                                  "hasDeliveryMethod": {
                                    "description": "Method used for delivery or shipping",
                                    "type": "string",
                                    "enum": [
                                      "LockerDelivery",
                                      "OnSitePickup",
                                      "ParcelService",
                                      "OnStorePickup"
                                    ]
                                  },
                                  "minDays": {
                                    "description": "Minimum number of days estimated for the delivery",
                                    "type": "number"
                                  },
                                  "maxDays": {
                                    "description": "Maximum number of days estimated for the delivery",
                                    "type": "number"
                                  },
                                  "averageDays": {
                                    "description": "Average days for a delivery",
                                    "type": "number"
                                  },
                                  "description": {
                                    "description": "Any associated text describing the shipping info",
                                    "type": "string"
                                  },
                                  "originAddress": {
                                    "$schema": "http://json-schema.org/draft-07/schema#",
                                    "title": "Postal Address",
                                    "type": "object",
                                    "properties": {
                                      "postalCode": {
                                        "description": "Postal code of the address",
                                        "example": "94043",
                                        "type": "string"
                                      },
                                      "streetAddress": {
                                        "description": "The street address",
                                        "example": "1600 Amphitheatre Pkwy",
                                        "type": "string"
                                      },
                                      "addressCountry": {
                                        "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                                        "example": [
                                          "United States of America",
                                          "US"
                                        ],
                                        "type": "string"
                                      },
                                      "addressLocality": {
                                        "description": "The locality in which the street address is, and which is in the region.",
                                        "example": "Mountain View",
                                        "type": "string"
                                      },
                                      "addressRegion": {
                                        "description": "The region in which the locality is, and which is in the country",
                                        "example": "California",
                                        "type": "string"
                                      },
                                      "raw": {
                                        "description": "All the address info as it appears on the website",
                                        "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                                        "type": "string"
                                      }
                                    },
                                    "description": "Location of the warehouse where the item is shipped from"
                                  },
                                  "raw": {
                                    "description": "Shipping information of the product included in the offer  as it appears on the website"
                                  }
                                },
                                "dependencies": {
                                  "currency": {
                                    "required": [
                                      "price"
                                    ]
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "price"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "description"
                                    ]
                                  }
                                ]
                              },
                              "availableAtOrFrom": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "Postal Address",
                                "type": "object",
                                "properties": {
                                  "postalCode": {
                                    "description": "Postal code of the address",
                                    "example": "94043",
                                    "type": "string"
                                  },
                                  "streetAddress": {
                                    "description": "The street address",
                                    "example": "1600 Amphitheatre Pkwy",
                                    "type": "string"
                                  },
                                  "addressCountry": {
                                    "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                                    "example": [
                                      "United States of America",
                                      "US"
                                    ],
                                    "type": "string"
                                  },
                                  "addressLocality": {
                                    "description": "The locality in which the street address is, and which is in the region.",
                                    "example": "Mountain View",
                                    "type": "string"
                                  },
                                  "addressRegion": {
                                    "description": "The region in which the locality is, and which is in the country",
                                    "example": "California",
                                    "type": "string"
                                  },
                                  "raw": {
                                    "description": "All the address info as it appears on the website",
                                    "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                                    "type": "string"
                                  }
                                },
                                "description": "The place(s) from which the offer can be obtained (e.g. store locations). It could contain a string, i.e.: online_only"
                              },
                              "areaServed": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "Postal Address",
                                "type": "object",
                                "properties": {
                                  "postalCode": {
                                    "description": "Postal code of the address",
                                    "example": "94043",
                                    "type": "string"
                                  },
                                  "streetAddress": {
                                    "description": "The street address",
                                    "example": "1600 Amphitheatre Pkwy",
                                    "type": "string"
                                  },
                                  "addressCountry": {
                                    "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                                    "example": [
                                      "United States of America",
                                      "US"
                                    ],
                                    "type": "string"
                                  },
                                  "addressLocality": {
                                    "description": "The locality in which the street address is, and which is in the region.",
                                    "example": "Mountain View",
                                    "type": "string"
                                  },
                                  "addressRegion": {
                                    "description": "The region in which the locality is, and which is in the country",
                                    "example": "California",
                                    "type": "string"
                                  },
                                  "raw": {
                                    "description": "All the address info as it appears on the website",
                                    "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                                    "type": "string"
                                  }
                                },
                                "description": "The geographic area where the product can be delivered"
                              },
                              "itemCondition": {
                                "description": "A predefined value and a textual description of the condition of the product included in the offer",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "A predefined value of the condition of the product included in the offer",
                                    "type": "string",
                                    "enum": [
                                      "NewCondition",
                                      "DamagedCondition",
                                      "RefurbishedCondition",
                                      "UsedCondition"
                                    ]
                                  },
                                  "raw": {
                                    "description": "Condition of the product included in the offer  as it appears on the website",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "type"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "description"
                                    ]
                                  }
                                ]
                              },
                              "pricePerUnit": {
                                "title": "Price per unit",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "price": {
                                    "type": "string",
                                    "pattern": "^[0-9]+(\\.[0-9]+)?$"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "unit": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "unit"
                                ],
                                "dependencies": {
                                  "currency": [
                                    "price"
                                  ]
                                }
                              },
                              "eligibleCustomerType": {
                                "description": "The type of customer for which the given offer is valid",
                                "type": "string",
                                "enum": [
                                  "Member",
                                  "Public"
                                ]
                              },
                              "ownership": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "Owned",
                                      "Rented",
                                      "Leased",
                                      "Licensed"
                                    ]
                                  },
                                  "duration": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type"
                                ]
                              },
                              "additionalProperty": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
                                "example": [
                                  {
                                    "name": "batteries",
                                    "value": "1 Lithium ion batteries required. (included)"
                                  },
                                  {
                                    "name": "Item model number",
                                    "value": "SM-A105G/DS"
                                  }
                                ],
                                "type": "array",
                                "items": {
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "A generic name:value field",
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": [
                                        "number",
                                        "string",
                                        "boolean",
                                        "object",
                                        "array"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              }
                            },
                            "dependencies": {
                              "currency": {
                                "anyOf": [
                                  {
                                    "required": [
                                      "price"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "regularPrice"
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          "type": "array"
                        },
                        "additionalProperty": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
                          "example": [
                            {
                              "name": "batteries",
                              "value": "1 Lithium ion batteries required. (included)"
                            },
                            {
                              "name": "Item model number",
                              "value": "SM-A105G/DS"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "A generic name:value field",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": [
                                  "number",
                                  "string",
                                  "boolean",
                                  "object",
                                  "array"
                                ]
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "sku": {
                          "description": "The Stock Keeping Unit (SKU) i.e. a merchant-specific identifier for the product\n\n![](https://dl.dropboxusercontent.com/s/3ymj186jxdaax8e/sku.png)\n",
                          "example": "A123DK9823",
                          "type": "string"
                        },
                        "mpn": {
                          "description": "The Manufacturer Part Number (MPN) of the product. The product would have the same MPN across different e-commerce websites.",
                          "type": "string"
                        },
                        "gtin": {
                          "description": "Standardized GTIN product identifier which is unique for a product across different sellers.",
                          "example": [
                            {
                              "type": "isbn13",
                              "value": "9781933624341"
                            }
                          ],
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "`gtin14` corresponds to former names *EAN/UCC-14*, *SCC-14*, *DUN-14*, *UPC Case Code*, *UPC Shipping Container Code*.\n\n`ean13` also includes the *jan* (japanese article number)\n",
                                "enum": [
                                  "ean13",
                                  "gtin8",
                                  "gtin14",
                                  "isbn10",
                                  "isbn13",
                                  "ismn",
                                  "issn",
                                  "upc"
                                ],
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "value"
                            ]
                          }
                        },
                        "manufacturer": {
                          "description": "The manufacturer company of the product. The difference between brand and manufacturer is difficult to stablish, so this field should only be included when the description appear explicitly on the website, otherwise, brand field is prefered over manufacturer",
                          "type": "string"
                        },
                        "productionDate": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "String format is date or datetime",
                          "type": "string",
                          "anyOf": [
                            {
                              "format": "date-time"
                            },
                            {
                              "format": "date"
                            },
                            {
                              "pattern": "^\\d{4}$"
                            },
                            {
                              "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                            },
                            {
                              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                            }
                          ],
                          "description": "The date of production of the item"
                        },
                        "productionDateRaw": {
                          "description": "The date of production of the item as it appears on the website",
                          "type": "string"
                        },
                        "size": {
                          "description": "Denotes the size of the product. Pertinent to products such as garments, shoes, accessories etc",
                          "examples": [
                            "XL",
                            "EU 6",
                            "12"
                          ],
                          "type": "string"
                        },
                        "height": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "A generic quantitative value",
                          "description": "The height of the product",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "maxValue": {
                              "description": "Maximum value allowed",
                              "type": "number"
                            },
                            "minValue": {
                              "description": "Minimum value required",
                              "type": "number"
                            },
                            "value": {
                              "description": "Exact value required",
                              "type": "number"
                            },
                            "unitText": {
                              "description": "Unit of measurement",
                              "type": "string"
                            },
                            "description": {
                              "description": "Free text from where this range was extracted",
                              "type": "string"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "maxValue"
                              ]
                            },
                            {
                              "required": [
                                "minValue"
                              ]
                            },
                            {
                              "required": [
                                "value"
                              ]
                            }
                          ]
                        },
                        "width": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "A generic quantitative value",
                          "description": "The width of the product",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "maxValue": {
                              "description": "Maximum value allowed",
                              "type": "number"
                            },
                            "minValue": {
                              "description": "Minimum value required",
                              "type": "number"
                            },
                            "value": {
                              "description": "Exact value required",
                              "type": "number"
                            },
                            "unitText": {
                              "description": "Unit of measurement",
                              "type": "string"
                            },
                            "description": {
                              "description": "Free text from where this range was extracted",
                              "type": "string"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "maxValue"
                              ]
                            },
                            {
                              "required": [
                                "minValue"
                              ]
                            },
                            {
                              "required": [
                                "value"
                              ]
                            }
                          ]
                        },
                        "depth": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "A generic quantitative value",
                          "description": "The depth of the product",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "maxValue": {
                              "description": "Maximum value allowed",
                              "type": "number"
                            },
                            "minValue": {
                              "description": "Minimum value required",
                              "type": "number"
                            },
                            "value": {
                              "description": "Exact value required",
                              "type": "number"
                            },
                            "unitText": {
                              "description": "Unit of measurement",
                              "type": "string"
                            },
                            "description": {
                              "description": "Free text from where this range was extracted",
                              "type": "string"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "maxValue"
                              ]
                            },
                            {
                              "required": [
                                "minValue"
                              ]
                            },
                            {
                              "required": [
                                "value"
                              ]
                            }
                          ]
                        },
                        "weight": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "A generic quantitative value",
                          "description": "The weight of the product",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "maxValue": {
                              "description": "Maximum value allowed",
                              "type": "number"
                            },
                            "minValue": {
                              "description": "Minimum value required",
                              "type": "number"
                            },
                            "value": {
                              "description": "Exact value required",
                              "type": "number"
                            },
                            "unitText": {
                              "description": "Unit of measurement",
                              "type": "string"
                            },
                            "description": {
                              "description": "Free text from where this range was extracted",
                              "type": "string"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "maxValue"
                              ]
                            },
                            {
                              "required": [
                                "minValue"
                              ]
                            },
                            {
                              "required": [
                                "value"
                              ]
                            }
                          ]
                        },
                        "volume": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "A generic quantitative value",
                          "description": "The volume of the product",
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "maxValue": {
                              "description": "Maximum value allowed",
                              "type": "number"
                            },
                            "minValue": {
                              "description": "Minimum value required",
                              "type": "number"
                            },
                            "value": {
                              "description": "Exact value required",
                              "type": "number"
                            },
                            "unitText": {
                              "description": "Unit of measurement",
                              "type": "string"
                            },
                            "description": {
                              "description": "Free text from where this range was extracted",
                              "type": "string"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "maxValue"
                              ]
                            },
                            {
                              "required": [
                                "minValue"
                              ]
                            },
                            {
                              "required": [
                                "value"
                              ]
                            }
                          ]
                        },
                        "url": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "URL",
                          "type": "string",
                          "format": "uri",
                          "pattern": "^http[s]{0,1}\\:.*",
                          "additionalProperties": false,
                          "description": "The URL of the product"
                        },
                        "releaseDate": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "String format is date or datetime",
                          "type": "string",
                          "anyOf": [
                            {
                              "format": "date-time"
                            },
                            {
                              "format": "date"
                            },
                            {
                              "pattern": "^\\d{4}$"
                            },
                            {
                              "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                            },
                            {
                              "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                            }
                          ],
                          "description": "Date on which the product was released or listed on the website in ISO 8601 date format",
                          "example": "2016-12-18"
                        },
                        "releaseDateRaw": {
                          "description": "Date on which the product was released or listed on the website",
                          "example": "December 18, 2016",
                          "type": "string"
                        },
                        "color": {
                          "description": "The color of the product",
                          "type": "string"
                        },
                        "rankings": {
                          "title": "Ranking",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "category": {
                                "type": "string"
                              },
                              "rank": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "category",
                              "rank"
                            ]
                          },
                          "description": "Position of the product across different ranks"
                        },
                        "nutrition": {
                          "description": "Nutritional information about the product",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Nutritional information about the recipe",
                            "properties": {
                              "description": {
                                "description": "Additional text for describing the nutritional table, i.e. per 100g",
                                "type": "string"
                              },
                              "calories": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Number of calories",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "carbohydrateContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Carbohydrate content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "cholesterolContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Cholesterol content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "fatContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Fat content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "fiberContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Fiber content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "proteinContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Protein content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "saturatedFatContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Saturated fat content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "sodiumContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Sodium",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "sugarContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Sugar content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "transFatContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Trans fat content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "unsaturatedFatContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "Unsaturated fat content",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "waterContent": {
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "A generic quantitative value",
                                "description": "The amount of water",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "maxValue": {
                                    "description": "Maximum value allowed",
                                    "type": "number"
                                  },
                                  "minValue": {
                                    "description": "Minimum value required",
                                    "type": "number"
                                  },
                                  "value": {
                                    "description": "Exact value required",
                                    "type": "number"
                                  },
                                  "unitText": {
                                    "description": "Unit of measurement",
                                    "type": "string"
                                  },
                                  "description": {
                                    "description": "Free text from where this range was extracted",
                                    "type": "string"
                                  }
                                },
                                "anyOf": [
                                  {
                                    "required": [
                                      "maxValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "minValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "value"
                                    ]
                                  }
                                ]
                              },
                              "vitaminsContent": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "content": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "A generic quantitative value",
                                      "description": "A value or interval for product characteristics and other purposes",
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "maxValue": {
                                          "description": "Maximum value allowed",
                                          "type": "number"
                                        },
                                        "minValue": {
                                          "description": "Minimum value required",
                                          "type": "number"
                                        },
                                        "value": {
                                          "description": "Exact value required",
                                          "type": "number"
                                        },
                                        "unitText": {
                                          "description": "Unit of measurement",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "Free text from where this range was extracted",
                                          "type": "string"
                                        }
                                      },
                                      "anyOf": [
                                        {
                                          "required": [
                                            "maxValue"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "minValue"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "value"
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "mineralsContent": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "content": {
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "A generic quantitative value",
                                      "description": "A value or interval for product characteristics and other purposes",
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "maxValue": {
                                          "description": "Maximum value allowed",
                                          "type": "number"
                                        },
                                        "minValue": {
                                          "description": "Minimum value required",
                                          "type": "number"
                                        },
                                        "value": {
                                          "description": "Exact value required",
                                          "type": "number"
                                        },
                                        "unitText": {
                                          "description": "Unit of measurement",
                                          "type": "string"
                                        },
                                        "description": {
                                          "description": "Free text from where this range was extracted",
                                          "type": "string"
                                        }
                                      },
                                      "anyOf": [
                                        {
                                          "required": [
                                            "maxValue"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "minValue"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "value"
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "url"
                      ]
                    }
                  ]
                }
              }
            },
            "required": [
              "relationshipName",
              "products"
            ]
          }
        },
        "variants": {
          "description": "This field returns a list of variants of the product.\nEach variant has the same schema as the Product schema defined in this table.\n",
          "type": "array",
          "items": {
            "properties": {
              "aggregateRating": {
                "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
                "example": {
                  "ratingValue": 4.0,
                  "bestRating": 5.0,
                  "reviewCount": 24
                },
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ratingValue": {
                    "description": "The rating for the content",
                    "type": "number"
                  },
                  "bestRating": {
                    "description": "The highest value allowed in this rating system",
                    "type": "number"
                  },
                  "reviewCount": {
                    "description": "The total number of reviews",
                    "type": "integer"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "ratingValue"
                    ]
                  },
                  {
                    "required": [
                      "bestRating"
                    ]
                  },
                  {
                    "required": [
                      "reviewCount"
                    ]
                  }
                ]
              },
              "ratingHistogram": {
                "description": "Distribution of ratings across the entire rating scale\n\n![](https://dl.dropboxusercontent.com/s/tqgvuujk362ztse/histogram.png)\n",
                "example": [
                  {
                    "ratingValue": "5",
                    "ratingPercentage": 61
                  },
                  {
                    "ratingValue": "4",
                    "ratingPercentage": 12
                  },
                  {
                    "ratingValue": "3",
                    "ratingPercentage": 6
                  },
                  {
                    "ratingValue": "2",
                    "ratingPercentage": 5
                  },
                  {
                    "ratingValue": "1",
                    "ratingPercentage": 16
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "description": "The number or percentage of reviews/ratings",
                  "properties": {
                    "ratingOption": {
                      "description": "A quantitative or qualitative value depicting the rating",
                      "examples": [
                        "4",
                        "5 stars",
                        "Good",
                        "Dissatisfied (4)"
                      ],
                      "type": "string"
                    },
                    "ratingCount": {
                      "description": "The number of reviews/ratings for a certain rating value",
                      "examples": [
                        4500
                      ],
                      "type": "number"
                    },
                    "ratingPercentage": {
                      "description": "The percentage of reviews/ratings for a certain rating value",
                      "examples": [
                        50
                      ],
                      "type": "number"
                    }
                  }
                }
              },
              "brand": {
                "description": "The brand associated with the product\n\n![](https://dl.dropboxusercontent.com/s/esun7ckldock2b2/brand.png)\n\n`\"Samsung\"`\n\n![](https://dl.dropboxusercontent.com/s/q4l3qesmsqzvd8s/brand_not.png)\n\n**No brand is returned**\n",
                "example": "Samsung",
                "type": "string"
              },
              "breadcrumbs": {
                "description": "A list of breadcrumbs with optional name and URL.",
                "example": [
                  {
                    "name": "Cell Phones & Accessories",
                    "link": "https://mjz.com/cell-phones-accessories"
                  }
                ],
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "link": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "URL",
                      "type": "string",
                      "format": "uri",
                      "pattern": "^http[s]{0,1}\\:.*",
                      "additionalProperties": false
                    }
                  },
                  "anyOf": [
                    {
                      "required": [
                        "name"
                      ]
                    },
                    {
                      "required": [
                        "link"
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "description": {
                "description": "A description of the product",
                "type": "string"
              },
              "images": {
                "description": "A list of URL or data URL values of all images of the product (may include the main image).",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "URL",
                  "type": "string",
                  "format": "uri",
                  "pattern": "^http[s]{0,1}\\:.*",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "questions": {
                "description": "A list of questions with answers related to the product.",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "Question",
                  "type": "object",
                  "properties": {
                    "text": {
                      "description": "The text of the question for the product/item.",
                      "example": "Do you like it?",
                      "type": "string"
                    },
                    "questionDate": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "String format is date or datetime",
                      "type": "string",
                      "anyOf": [
                        {
                          "format": "date-time"
                        },
                        {
                          "format": "date"
                        },
                        {
                          "pattern": "^\\d{4}$"
                        },
                        {
                          "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                        },
                        {
                          "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                        }
                      ],
                      "description": "Date when the question was asked.",
                      "example": "2019-06-21T00:00:00"
                    },
                    "questionDateRaw": {
                      "description": "Date when the question was asked - raw data",
                      "type": "string",
                      "example": "21 June 2019"
                    },
                    "author": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "description": "Name of the author",
                          "type": "string"
                        }
                      }
                    },
                    "url": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "URL",
                      "type": "string",
                      "format": "uri",
                      "pattern": "^http[s]{0,1}\\:.*",
                      "additionalProperties": false,
                      "description": "The URL of the question",
                      "example": "https://www.example.com/questions/some_id"
                    },
                    "vote": {
                      "description": "The number of votes for the question",
                      "example": 5,
                      "type": "integer"
                    },
                    "numberOfAnswers": {
                      "description": "The number of answers for the question",
                      "example": 8,
                      "type": "integer"
                    },
                    "answers": {
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Answer",
                        "type": "object",
                        "properties": {
                          "text": {
                            "description": "The answer of a question.",
                            "example": "Do you like it?",
                            "type": "string"
                          },
                          "answerDate": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "String format is date or datetime",
                            "type": "string",
                            "anyOf": [
                              {
                                "format": "date-time"
                              },
                              {
                                "format": "date"
                              },
                              {
                                "pattern": "^\\d{4}$"
                              },
                              {
                                "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                              },
                              {
                                "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                              }
                            ],
                            "description": "Date when the answer was posted.",
                            "example": "2019-06-21T00:00:00"
                          },
                          "answerDateRaw": {
                            "description": "Date when the answer was posted - raw data",
                            "type": "string",
                            "example": "21 June 2019"
                          },
                          "author": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "description": "Name of the author",
                                "type": "string"
                              }
                            }
                          },
                          "interaction_counter": {
                            "description": "A summary of how users have interacted",
                            "items": {
                              "$schema": "http://json-schema.org/draft-07/schema#",
                              "title": "Interaction Counter",
                              "type": "object",
                              "properties": {
                                "interactionType": {
                                  "description": "The Action representing the type of interaction.",
                                  "type": "string",
                                  "example": [
                                    "upvote",
                                    "downvote",
                                    "like",
                                    "funny",
                                    "download",
                                    "comment"
                                  ]
                                },
                                "userInteractionCount": {
                                  "description": "The number of interactions.",
                                  "example": 12,
                                  "type": "integer"
                                }
                              }
                            },
                            "type": "array"
                          }
                        }
                      }
                    },
                    "interaction_counter": {
                      "description": "A summary of how users have interacted",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "Interaction Counter",
                        "type": "object",
                        "properties": {
                          "interactionType": {
                            "description": "The Action representing the type of interaction.",
                            "type": "string",
                            "example": [
                              "upvote",
                              "downvote",
                              "like",
                              "funny",
                              "download",
                              "comment"
                            ]
                          },
                          "userInteractionCount": {
                            "description": "The number of interactions.",
                            "example": 12,
                            "type": "integer"
                          }
                        }
                      },
                      "type": "array"
                    }
                  }
                },
                "type": "array"
              },
              "madeIn": {
                "description": "The city or country where the product has been manufactured. The website should explicitly carry wording to disambiguate this from product location",
                "examples": [
                  "Vietnam",
                  "New York"
                ],
                "type": "string"
              },
              "mainImage": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "URL",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]{0,1}\\:.*",
                "additionalProperties": false,
                "description": "A URL or data URL value of the main image of the product."
              },
              "name": {
                "description": "The name of the product",
                "type": "string"
              },
              "offers": {
                "description": "This field contains rich information pertaining to all the buying options offered on a product.\n\n![](https://dl.dropboxusercontent.com/s/s165a738ez4vsdq/offers2.png)\n",
                "example": [
                  {
                    "availability": "InStock",
                    "currency": "$",
                    "itemCondition": {
                      "description": "Used - Very Good",
                      "type": "used"
                    },
                    "price": "129.99",
                    "seller": {
                      "aggregateRating": {
                        "bestRating": 5,
                        "reviewCount": 479
                      },
                      "identifier": "A8K32FFKI51FKN",
                      "name": "Merch Store",
                      "shippingInfo": {
                        "description": "Arrives between September 3-18.",
                        "maxDays": "30",
                        "minDays": "15"
                      },
                      "url": "https://mzi.com/dr/amg/seller=A8K32FFKI51FKN"
                    }
                  }
                ],
                "items": {
                  "description": "The offers field contains several fields as explained below that can be leveraged to get deep insights\ninto the various product offerings, associated seller information as well as inventory.\n",
                  "title": "Offer",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "inventoryLevel": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Amount of item's stock available for buying on the website",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "availability": {
                      "description": "Availibility status for the offer",
                      "examples": [
                        "InStock"
                      ],
                      "type": "string",
                      "enum": [
                        "Discontinued",
                        "InStock",
                        "InStoreOnly",
                        "LimitedAvailability",
                        "OnlineOnly",
                        "OutOfStock",
                        "PreOrder",
                        "PreSale",
                        "SoldOut"
                      ]
                    },
                    "currency": {
                      "type": "string"
                    },
                    "regularPrice": {
                      "description": "The price at which the product was being offered and which is presented as a reference to the current price. It may be represented by original price, list price or maximum retail price for which the product is sold. This field is only returned if it is explicitly mentioned in the offer or the product page\n",
                      "type": "string",
                      "pattern": "^[0-9]+(\\.[0-9]+)?$"
                    },
                    "price": {
                      "description": "The price at which the product is being offered. If there is only one price associated with the offer, it is this field in which it is returned\n",
                      "type": "string",
                      "pattern": "^[0-9]+(\\.[0-9]+)?$"
                    },
                    "eligibleQuantity": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "A required quantity that needs to be bought in order to be able to get this offer",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "seller": {
                      "title": "Seller",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "url": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "URL",
                          "type": "string",
                          "format": "uri",
                          "pattern": "^http[s]{0,1}\\:.*",
                          "additionalProperties": false
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "aggregateRating": {
                          "description": "The overall rating, based on a collection of reviews or ratings\n\n![](https://dl.dropboxusercontent.com/s/jgxjtnss6y68j78/rating.png)\n",
                          "example": {
                            "ratingValue": 4.0,
                            "bestRating": 5.0,
                            "reviewCount": 24
                          },
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "ratingValue": {
                              "description": "The rating for the content",
                              "type": "number"
                            },
                            "bestRating": {
                              "description": "The highest value allowed in this rating system",
                              "type": "number"
                            },
                            "reviewCount": {
                              "description": "The total number of reviews",
                              "type": "integer"
                            }
                          },
                          "anyOf": [
                            {
                              "required": [
                                "ratingValue"
                              ]
                            },
                            {
                              "required": [
                                "bestRating"
                              ]
                            },
                            {
                              "required": [
                                "reviewCount"
                              ]
                            }
                          ]
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "name"
                          ]
                        },
                        {
                          "required": [
                            "url"
                          ]
                        },
                        {
                          "required": [
                            "identifier"
                          ]
                        }
                      ]
                    },
                    "shippingInfo": {
                      "description": "Shipping info",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "currency": {
                          "description": "Currency associated to the price",
                          "type": "string"
                        },
                        "price": {
                          "description": "Cost of the shipping",
                          "type": "string",
                          "pattern": "^[0-9]+(\\.[0-9]+)?$"
                        },
                        "hasDeliveryMethod": {
                          "description": "Method used for delivery or shipping",
                          "type": "string",
                          "enum": [
                            "LockerDelivery",
                            "OnSitePickup",
                            "ParcelService",
                            "OnStorePickup"
                          ]
                        },
                        "minDays": {
                          "description": "Minimum number of days estimated for the delivery",
                          "type": "number"
                        },
                        "maxDays": {
                          "description": "Maximum number of days estimated for the delivery",
                          "type": "number"
                        },
                        "averageDays": {
                          "description": "Average days for a delivery",
                          "type": "number"
                        },
                        "description": {
                          "description": "Any associated text describing the shipping info",
                          "type": "string"
                        },
                        "originAddress": {
                          "$schema": "http://json-schema.org/draft-07/schema#",
                          "title": "Postal Address",
                          "type": "object",
                          "properties": {
                            "postalCode": {
                              "description": "Postal code of the address",
                              "example": "94043",
                              "type": "string"
                            },
                            "streetAddress": {
                              "description": "The street address",
                              "example": "1600 Amphitheatre Pkwy",
                              "type": "string"
                            },
                            "addressCountry": {
                              "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                              "example": [
                                "United States of America",
                                "US"
                              ],
                              "type": "string"
                            },
                            "addressLocality": {
                              "description": "The locality in which the street address is, and which is in the region.",
                              "example": "Mountain View",
                              "type": "string"
                            },
                            "addressRegion": {
                              "description": "The region in which the locality is, and which is in the country",
                              "example": "California",
                              "type": "string"
                            },
                            "raw": {
                              "description": "All the address info as it appears on the website",
                              "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                              "type": "string"
                            }
                          },
                          "description": "Location of the warehouse where the item is shipped from"
                        },
                        "raw": {
                          "description": "Shipping information of the product included in the offer  as it appears on the website"
                        }
                      },
                      "dependencies": {
                        "currency": {
                          "required": [
                            "price"
                          ]
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "price"
                          ]
                        },
                        {
                          "required": [
                            "description"
                          ]
                        }
                      ]
                    },
                    "availableAtOrFrom": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "Postal Address",
                      "type": "object",
                      "properties": {
                        "postalCode": {
                          "description": "Postal code of the address",
                          "example": "94043",
                          "type": "string"
                        },
                        "streetAddress": {
                          "description": "The street address",
                          "example": "1600 Amphitheatre Pkwy",
                          "type": "string"
                        },
                        "addressCountry": {
                          "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                          "example": [
                            "United States of America",
                            "US"
                          ],
                          "type": "string"
                        },
                        "addressLocality": {
                          "description": "The locality in which the street address is, and which is in the region.",
                          "example": "Mountain View",
                          "type": "string"
                        },
                        "addressRegion": {
                          "description": "The region in which the locality is, and which is in the country",
                          "example": "California",
                          "type": "string"
                        },
                        "raw": {
                          "description": "All the address info as it appears on the website",
                          "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                          "type": "string"
                        }
                      },
                      "description": "The place(s) from which the offer can be obtained (e.g. store locations). It could contain a string, i.e.: online_only"
                    },
                    "areaServed": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "Postal Address",
                      "type": "object",
                      "properties": {
                        "postalCode": {
                          "description": "Postal code of the address",
                          "example": "94043",
                          "type": "string"
                        },
                        "streetAddress": {
                          "description": "The street address",
                          "example": "1600 Amphitheatre Pkwy",
                          "type": "string"
                        },
                        "addressCountry": {
                          "description": "The country name or the two-letter ISO 3166-1 alpha-2 country code. https://en.wikipedia.org/wiki/ISO_3166-1",
                          "example": [
                            "United States of America",
                            "US"
                          ],
                          "type": "string"
                        },
                        "addressLocality": {
                          "description": "The locality in which the street address is, and which is in the region.",
                          "example": "Mountain View",
                          "type": "string"
                        },
                        "addressRegion": {
                          "description": "The region in which the locality is, and which is in the country",
                          "example": "California",
                          "type": "string"
                        },
                        "raw": {
                          "description": "All the address info as it appears on the website",
                          "example": "1600 Amphitheatre Pkwy, Mountain View, CA 94043, United States of America",
                          "type": "string"
                        }
                      },
                      "description": "The geographic area where the product can be delivered"
                    },
                    "itemCondition": {
                      "description": "A predefined value and a textual description of the condition of the product included in the offer",
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "A predefined value of the condition of the product included in the offer",
                          "type": "string",
                          "enum": [
                            "NewCondition",
                            "DamagedCondition",
                            "RefurbishedCondition",
                            "UsedCondition"
                          ]
                        },
                        "raw": {
                          "description": "Condition of the product included in the offer  as it appears on the website",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "type"
                          ]
                        },
                        {
                          "required": [
                            "description"
                          ]
                        }
                      ]
                    },
                    "pricePerUnit": {
                      "title": "Price per unit",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "price": {
                          "type": "string",
                          "pattern": "^[0-9]+(\\.[0-9]+)?$"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "unit": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "unit"
                      ],
                      "dependencies": {
                        "currency": [
                          "price"
                        ]
                      }
                    },
                    "eligibleCustomerType": {
                      "description": "The type of customer for which the given offer is valid",
                      "type": "string",
                      "enum": [
                        "Member",
                        "Public"
                      ]
                    },
                    "ownership": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "Owned",
                            "Rented",
                            "Leased",
                            "Licensed"
                          ]
                        },
                        "duration": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "additionalProperty": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
                      "example": [
                        {
                          "name": "batteries",
                          "value": "1 Lithium ion batteries required. (included)"
                        },
                        {
                          "name": "Item model number",
                          "value": "SM-A105G/DS"
                        }
                      ],
                      "type": "array",
                      "items": {
                        "$schema": "http://json-schema.org/draft-07/schema#",
                        "title": "A generic name:value field",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": [
                              "number",
                              "string",
                              "boolean",
                              "object",
                              "array"
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    }
                  },
                  "dependencies": {
                    "currency": {
                      "anyOf": [
                        {
                          "required": [
                            "price"
                          ]
                        },
                        {
                          "required": [
                            "regularPrice"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "array"
              },
              "additionalProperty": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "description": "This name-value pair field holds information pertaining to specific features\nthat have no matching property in the schema.\n\n![](https://dl.dropboxusercontent.com/s/aqgdfeuvrrdjfek/product_info.png)\n",
                "example": [
                  {
                    "name": "batteries",
                    "value": "1 Lithium ion batteries required. (included)"
                  },
                  {
                    "name": "Item model number",
                    "value": "SM-A105G/DS"
                  }
                ],
                "type": "array",
                "items": {
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "title": "A generic name:value field",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "value": {
                      "type": [
                        "number",
                        "string",
                        "boolean",
                        "object",
                        "array"
                      ]
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "sku": {
                "description": "The Stock Keeping Unit (SKU) i.e. a merchant-specific identifier for the product\n\n![](https://dl.dropboxusercontent.com/s/3ymj186jxdaax8e/sku.png)\n",
                "example": "A123DK9823",
                "type": "string"
              },
              "mpn": {
                "description": "The Manufacturer Part Number (MPN) of the product. The product would have the same MPN across different e-commerce websites.",
                "type": "string"
              },
              "gtin": {
                "description": "Standardized GTIN product identifier which is unique for a product across different sellers.",
                "example": [
                  {
                    "type": "isbn13",
                    "value": "9781933624341"
                  }
                ],
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "`gtin14` corresponds to former names *EAN/UCC-14*, *SCC-14*, *DUN-14*, *UPC Case Code*, *UPC Shipping Container Code*.\n\n`ean13` also includes the *jan* (japanese article number)\n",
                      "enum": [
                        "ean13",
                        "gtin8",
                        "gtin14",
                        "isbn10",
                        "isbn13",
                        "ismn",
                        "issn",
                        "upc"
                      ],
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "type",
                    "value"
                  ]
                }
              },
              "manufacturer": {
                "description": "The manufacturer company of the product. The difference between brand and manufacturer is difficult to stablish, so this field should only be included when the description appear explicitly on the website, otherwise, brand field is prefered over manufacturer",
                "type": "string"
              },
              "productionDate": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "The date of production of the item"
              },
              "productionDateRaw": {
                "description": "The date of production of the item as it appears on the website",
                "type": "string"
              },
              "size": {
                "description": "Denotes the size of the product. Pertinent to products such as garments, shoes, accessories etc",
                "examples": [
                  "XL",
                  "EU 6",
                  "12"
                ],
                "type": "string"
              },
              "height": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The height of the product",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "width": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The width of the product",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "depth": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The depth of the product",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "weight": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The weight of the product",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "volume": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "A generic quantitative value",
                "description": "The volume of the product",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "maxValue": {
                    "description": "Maximum value allowed",
                    "type": "number"
                  },
                  "minValue": {
                    "description": "Minimum value required",
                    "type": "number"
                  },
                  "value": {
                    "description": "Exact value required",
                    "type": "number"
                  },
                  "unitText": {
                    "description": "Unit of measurement",
                    "type": "string"
                  },
                  "description": {
                    "description": "Free text from where this range was extracted",
                    "type": "string"
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "maxValue"
                    ]
                  },
                  {
                    "required": [
                      "minValue"
                    ]
                  },
                  {
                    "required": [
                      "value"
                    ]
                  }
                ]
              },
              "url": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "URL",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]{0,1}\\:.*",
                "additionalProperties": false,
                "description": "The URL of the product"
              },
              "releaseDate": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "Date on which the product was released or listed on the website in ISO 8601 date format",
                "example": "2016-12-18"
              },
              "releaseDateRaw": {
                "description": "Date on which the product was released or listed on the website",
                "example": "December 18, 2016",
                "type": "string"
              },
              "color": {
                "description": "The color of the product",
                "type": "string"
              },
              "rankings": {
                "title": "Ranking",
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "category": {
                      "type": "string"
                    },
                    "rank": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "category",
                    "rank"
                  ]
                },
                "description": "Position of the product across different ranks"
              },
              "nutrition": {
                "description": "Nutritional information about the product",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Nutritional information about the recipe",
                  "properties": {
                    "description": {
                      "description": "Additional text for describing the nutritional table, i.e. per 100g",
                      "type": "string"
                    },
                    "calories": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Number of calories",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "carbohydrateContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Carbohydrate content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "cholesterolContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Cholesterol content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "fatContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Fat content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "fiberContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Fiber content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "proteinContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Protein content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "saturatedFatContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Saturated fat content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "sodiumContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Sodium",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "sugarContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Sugar content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "transFatContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Trans fat content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "unsaturatedFatContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "Unsaturated fat content",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "waterContent": {
                      "$schema": "http://json-schema.org/draft-07/schema#",
                      "title": "A generic quantitative value",
                      "description": "The amount of water",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "maxValue": {
                          "description": "Maximum value allowed",
                          "type": "number"
                        },
                        "minValue": {
                          "description": "Minimum value required",
                          "type": "number"
                        },
                        "value": {
                          "description": "Exact value required",
                          "type": "number"
                        },
                        "unitText": {
                          "description": "Unit of measurement",
                          "type": "string"
                        },
                        "description": {
                          "description": "Free text from where this range was extracted",
                          "type": "string"
                        }
                      },
                      "anyOf": [
                        {
                          "required": [
                            "maxValue"
                          ]
                        },
                        {
                          "required": [
                            "minValue"
                          ]
                        },
                        {
                          "required": [
                            "value"
                          ]
                        }
                      ]
                    },
                    "vitaminsContent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "content": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "A generic quantitative value",
                            "description": "A value or interval for product characteristics and other purposes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "maxValue": {
                                "description": "Maximum value allowed",
                                "type": "number"
                              },
                              "minValue": {
                                "description": "Minimum value required",
                                "type": "number"
                              },
                              "value": {
                                "description": "Exact value required",
                                "type": "number"
                              },
                              "unitText": {
                                "description": "Unit of measurement",
                                "type": "string"
                              },
                              "description": {
                                "description": "Free text from where this range was extracted",
                                "type": "string"
                              }
                            },
                            "anyOf": [
                              {
                                "required": [
                                  "maxValue"
                                ]
                              },
                              {
                                "required": [
                                  "minValue"
                                ]
                              },
                              {
                                "required": [
                                  "value"
                                ]
                              }
                            ]
                          }
                        }
                      }
                    },
                    "mineralsContent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "content": {
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "A generic quantitative value",
                            "description": "A value or interval for product characteristics and other purposes",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "maxValue": {
                                "description": "Maximum value allowed",
                                "type": "number"
                              },
                              "minValue": {
                                "description": "Minimum value required",
                                "type": "number"
                              },
                              "value": {
                                "description": "Exact value required",
                                "type": "number"
                              },
                              "unitText": {
                                "description": "Unit of measurement",
                                "type": "string"
                              },
                              "description": {
                                "description": "Free text from where this range was extracted",
                                "type": "string"
                              }
                            },
                            "anyOf": [
                              {
                                "required": [
                                  "maxValue"
                                ]
                              },
                              {
                                "required": [
                                  "minValue"
                                ]
                              },
                              {
                                "required": [
                                  "value"
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "type": "object",
            "description": "Product Variants"
          }
        },
        "reviews": {
          "description": "Product Reviews",
          "type": "array",
          "items": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "title": "Review",
            "type": "object",
            "properties": {
              "itemReviewed": {
                "description": "Unique identifier of the item being reviewed",
                "type": "string"
              },
              "name": {
                "description": "Title, Header or Name of the review",
                "type": "string"
              },
              "reviewBody": {
                "description": "Text content of the review",
                "type": "string"
              },
              "reviewRating": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "ratingValue": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "Type is Text or Number",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "bestRating": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "Type is Text or Number",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "worstRating": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "title": "Type is Text or Number",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  }
                },
                "required": [
                  "ratingValue"
                ],
                "description": "Review rating"
              },
              "author": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "name": {
                    "description": "Name of the author",
                    "type": "string"
                  }
                },
                "description": "Info about the author of this content or rating"
              },
              "dateCreated": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "Date of review's creation in ISO 8601"
              },
              "dateCreatedRaw": {
                "description": "Date of review's creation",
                "type": "string"
              },
              "datePublished": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "Date of first broadcast/publication in ISO 8601"
              },
              "datePublishedRaw": {
                "description": "Date of first broadcast/publication",
                "type": "string"
              },
              "dateModified": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "String format is date or datetime",
                "type": "string",
                "anyOf": [
                  {
                    "format": "date-time"
                  },
                  {
                    "format": "date"
                  },
                  {
                    "pattern": "^\\d{4}$"
                  },
                  {
                    "pattern": "^\\d{4}-(0?[1-9]|1[012])$"
                  },
                  {
                    "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$"
                  }
                ],
                "description": "Date of the last modification done to the review in ISO 8601"
              },
              "dateModifiedRaw": {
                "description": "Date of the last modification done to the review",
                "type": "string"
              },
              "url": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "URL",
                "type": "string",
                "format": "uri",
                "pattern": "^http[s]{0,1}\\:.*",
                "additionalProperties": false,
                "description": "A link to the page containing the review"
              },
              "votedHelpful": {
                "description": "Number of votes that consider this review as helpful",
                "type": "integer"
              },
              "votedUnhelpful": {
                "description": "Number of votes that consider this review as unhelpful",
                "type": "integer"
              },
              "isIncentivised": {
                "description": "Whether the author has recieved any incentive",
                "type": "boolean"
              },
              "isVerified": {
                "description": "Whether the reviewer has been verified as a legit person or a real owner / buyer of the reiewed product",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  ],
  "required": [
    "url"
  ]
}
